{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/exciting/exciting.component.ts","./src/app/exciting/exciting.component.html","./src/app/exciting/fun-carousel/fun-carousel.component.ts","./src/app/exciting/fun-carousel/fun-carousel.component.html","./src/app/exciting/topic-bulletin/topic-bulletin.component.ts","./src/app/exciting/topic-bulletin/topic-bulletin.component.html","./src/app/home/experiences/experience-card/experience-card.component.ts","./src/app/home/experiences/experience-card/experience-card.component.html","./src/app/home/experiences/experience-card/experience-image/experience-image.component.ts","./src/app/home/experiences/experience-card/experience-image/experience-image.component.html","./src/app/home/experiences/experience-card/experience-text/experience-text.component.ts","./src/app/home/experiences/experience-card/experience-text/experience-text.component.html","./src/app/home/experiences/experiences.component.ts","./src/app/home/experiences/experiences.component.html","./src/app/home/experiences/experiences.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/home/projects/project-card/project-card.component.ts","./src/app/home/projects/project-card/project-card.component.html","./src/app/home/projects/project-display/project-display.component.ts","./src/app/home/projects/project-display/project-display.component.html","./src/app/home/projects/project.ts","./src/app/home/projects/projects.component.ts","./src/app/home/projects/projects.component.html","./src/app/home/shared/skills-hotbar/skills-hotbar.component.ts","./src/app/home/shared/skills-hotbar/skills-hotbar.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent, pathMatch: 'full' },\r\n  { path: '**', redirectTo: '' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'personal-website';\r\n}\r\n","<nav>\r\n  <a routerLink=\"\">Home</a>\r\n<!--  <a routerLink=\"resume\">Resume</a>-->\r\n<!--  <a routerLink=\"exciting\">Exciting</a>-->\r\n</nav>\r\n<router-outlet></router-outlet>\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {HomeComponent} from './home/home.component';\r\nimport {ExperiencesComponent} from './home/experiences/experiences.component';\r\nimport {AngularSvgIconModule} from 'angular-svg-icon';\r\nimport {ExperienceCardComponent} from './home/experiences/experience-card/experience-card.component';\r\nimport {SkillsHotbarComponent} from './home/shared/skills-hotbar/skills-hotbar.component';\r\nimport {ProjectsComponent} from './home/projects/projects.component';\r\nimport {ProjectDisplayComponent} from './home/projects/project-display/project-display.component';\r\nimport {ProjectCardComponent} from './home/projects/project-card/project-card.component';\r\nimport {ExcitingComponent} from './exciting/exciting.component';\r\nimport {FunCarouselComponent} from './exciting/fun-carousel/fun-carousel.component';\r\nimport {TopicBulletinComponent} from './exciting/topic-bulletin/topic-bulletin.component';\r\nimport {environment} from '../environments/environment';\r\nimport {AngularFireModule} from '@angular/fire';\r\nimport {NgbCarouselModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport {AngularFireStorageModule, BUCKET} from '@angular/fire/storage';\r\nimport {AngularFireAnalyticsModule, UserTrackingService} from '@angular/fire/analytics';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {MatTabsModule} from '@angular/material/tabs';\nimport { ExperienceTextComponent } from './home/experiences/experience-card/experience-text/experience-text.component';\nimport { ExperienceImageComponent } from './home/experiences/experience-card/experience-image/experience-image.component'\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    ExperiencesComponent,\r\n    ExperienceCardComponent,\r\n    SkillsHotbarComponent,\r\n    ProjectsComponent,\r\n    ProjectDisplayComponent,\r\n    ProjectCardComponent,\r\n    ExcitingComponent,\r\n    FunCarouselComponent,\r\n    TopicBulletinComponent,\r\n    ExperienceTextComponent,\r\n    ExperienceImageComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    AngularSvgIconModule,\r\n    AngularFireModule.initializeApp(environment.firebaseConfig),\r\n    AngularFireStorageModule,\r\n    AngularFireAnalyticsModule,\r\n    NgbCarouselModule,\r\n    BrowserAnimationsModule,\r\n    MatTabsModule,\r\n  ],\r\n  providers: [\r\n    { provide: BUCKET, useValue: 'littealeaf.appspot.com' },\r\n    UserTrackingService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-exciting',\r\n  templateUrl: './exciting.component.html',\r\n  styleUrls: ['./exciting.component.scss']\r\n})\r\nexport class ExcitingComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<body>\r\n  <app-cool-carousel></app-cool-carousel>\r\n  <app-topic-bulletin></app-topic-bulletin>\r\n</body>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {AngularFireStorage} from '@angular/fire/storage';\r\n\r\n@Component({\r\n  selector: 'app-cool-carousel',\r\n  templateUrl: './fun-carousel.component.html',\r\n  styleUrls: ['./fun-carousel.component.scss']\r\n})\r\nexport class FunCarouselComponent implements OnInit {\r\n  constructor(private storage: AngularFireStorage) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<section>\r\n  <h1>Carousel of Fun</h1>\r\n  <h3>Byproducts of my mind...</h3>\r\n  <ngb-carousel pauseOnFocus=\"true\" pauseOnHover=\"true\" wrap=\"true\" showNavigationArrows=\"true\">\r\n    <ng-template ngbSlide>\r\n      <div>\r\n        <h2>Astro Donut Carrot Nyan Adventures</h2>\r\n        <h3>A short Blender animation featuring a carrot's fun adventures through a doughnut filled galaxy</h3>\r\n        <h3>Experienced modelling, texturing, and the particle system in Blender</h3>\r\n        <video controls autoplay>\r\n          <source\r\n            src=\"assets/Astro%20Donut%20Carrot%20Nyan.mp4\"\r\n            type=\"video/mp4\">\r\n        </video>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template ngbSlide>\r\n      <div>\r\n        <h2>Nutshell Command Line Interface</h2>\r\n        <h3>A short Blender animation featuring a carrot's fun adventures through a doughnut filled galaxy</h3>\r\n        <h3>Experienced modelling, texturing, and the particle system in Blender</h3>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template ngbSlide>\r\n      <div>\r\n        <h2>Trefoil</h2>\r\n        <h3>A short Blender animation featuring a carrot's fun adventures through a doughnut filled galaxy</h3>\r\n        <h3>Experienced modelling, texturing, and the particle system in Blender</h3>\r\n      </div>\r\n    </ng-template>\r\n  </ngb-carousel>\r\n</section>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {Topic} from './topics';\r\nimport {AngularFirestore} from '@angular/fire/firestore';\r\n\r\n@Component({\r\n  selector: 'app-topic-bulletin',\r\n  templateUrl: './topic-bulletin.component.html',\r\n  styleUrls: ['./topic-bulletin.component.scss']\r\n})\r\nexport class TopicBulletinComponent implements OnInit {\r\n  topics: Topic[];\r\n\r\n  constructor(private afs: AngularFirestore) { }\r\n\r\n  ngOnInit(): void {\r\n    this.afs.collection<Topic>('topics').valueChanges().subscribe(topics => {\r\n      this.topics = topics.sort((topicOne, topicTwo) => new Date(topicTwo.date).getTime() - new Date(topicOne.date).getTime());\r\n    });\r\n  }\r\n\r\n}\r\n","<section>\r\n  <h1>Neat Things!</h1>\r\n  <h3>What's been on my mind...</h3>\r\n  <div class=\"topics-container\">\r\n    <a\r\n      *ngFor=\"let topic of topics\"\r\n      [href]=\"'https://www.google.com/search?q=' + topic.name\"\r\n      target=\"_blank\"\r\n    >{{topic.name}} <span>{{topic.date}}</span></a>\r\n  </div>\r\n</section>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Experience } from '../experiences';\r\n\r\n@Component({\r\n  selector: 'app-experience-card',\r\n  templateUrl: './experience-card.component.html',\r\n  styleUrls: ['./experience-card.component.scss']\r\n})\r\nexport class ExperienceCardComponent implements OnInit {\r\n  @Input() experience: Experience;\r\n  @Input() isLast: boolean;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div\r\n  class=\"experience-card\"\r\n  [class.display-card]=\"experience.video || experience.gif\"\r\n  [class.image-card]=\"experience.image\"\r\n  [class.is-last]=\"isLast\"\r\n>\r\n  <img\r\n    *ngIf=\"experience.gif\"\r\n    src=\"assets/{{experience.gif}}\"\r\n  />\r\n  <video\r\n    controls\r\n    *ngIf=\"experience.video\"\r\n  >\r\n    <source\r\n      src=\"assets/{{experience.video}}\"\r\n      type=\"video/mp4\">\r\n  </video>\r\n  <app-experience-image\r\n    *ngIf=\"experience.image\"\r\n    [experienceImage]=\"experience.image\"\r\n  ></app-experience-image>\r\n  <app-experience-text\r\n    [experienceText]=\"experience.text\"\r\n    [isCentered]=\"!experience.image\"\r\n  ></app-experience-text>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ExperienceImage } from '../../experiences';\n\n@Component({\n  selector: 'app-experience-image',\n  templateUrl: './experience-image.component.html',\n  styleUrls: ['./experience-image.component.scss']\n})\nexport class ExperienceImageComponent implements OnInit {\n  @Input() experienceImage: ExperienceImage;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div\n  class=\"image-container\"\n  [class]=\"experienceImage.class\"\n>\n  <img\n    [src]=\"experienceImage.path\"\n    [alt]=\"experienceImage.alt\"\n  >\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { ExperienceText } from '../../experiences';\n\n@Component({\n  selector: 'app-experience-text',\n  templateUrl: './experience-text.component.html',\n  styleUrls: ['./experience-text.component.scss']\n})\nexport class ExperienceTextComponent implements OnInit {\n  @Input() experienceText: ExperienceText;\n  @Input() isCentered: boolean;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div [class.is-centered]=\"isCentered\">\n  <h1 [class.light-mode]=\"!experienceText.isWork\">{{ experienceText.heading }}</h1>\n  <h3 *ngIf=\"experienceText.subheading\">{{ experienceText.subheading }}</h3>\n  <strong>{{ experienceText.duration }}</strong>\n  <ul [innerHTML]=\"experienceText.description\"></ul>\n  <app-skills-hotbar\n    *ngIf=\"experienceText.skills.length > 0\"\n    [skills]=\"experienceText.skills\"\n    [isLightMode]=\"!experienceText.isWork\"\n  ></app-skills-hotbar>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Experience, graphicsExperiences, miscExperiences, networksExperiences, softwareDevExperiences } from './experiences';\r\n\r\n@Component({\r\n  selector: 'app-experiences',\r\n  templateUrl: './experiences.component.html',\r\n  styleUrls: ['./experiences.component.scss']\r\n})\r\nexport class ExperiencesComponent implements OnInit {\r\n  softwareDevExperiences: Experience[] = softwareDevExperiences;\r\n  graphicsExperiences: Experience[] = graphicsExperiences;\r\n  networksExperiences: Experience[] = networksExperiences;\r\n  miscExperiences: Experience[] = miscExperiences;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<section>\r\n  <h1>Portfolio</h1>\r\n  <h3>What I've been up to...</h3>\r\n  <div class=\"experience-container\">\r\n    <mat-tab-group mat-align-tabs=\"center\">\r\n      <mat-tab label=\"App Dev\">\r\n        <app-experience-card\r\n          *ngFor=\"let experience of softwareDevExperiences; let i = index\"\r\n          [experience]=\"experience\"\r\n          [isLast]=\"i === softwareDevExperiences.length - 1\">\r\n        </app-experience-card>\r\n      </mat-tab>\r\n      <mat-tab label=\"Graphics\">\r\n        <app-experience-card\r\n          *ngFor=\"let experience of graphicsExperiences; let i = index\"\r\n          [experience]=\"experience\"\r\n          [isLast]=\"i === graphicsExperiences.length - 1\">\r\n        </app-experience-card>\r\n      </mat-tab>\r\n      <mat-tab label=\"Networks\">\r\n        <app-experience-card\r\n          *ngFor=\"let experience of networksExperiences\"\r\n          [experience]=\"experience\">\r\n        </app-experience-card>\r\n      </mat-tab>\r\n      <mat-tab label=\"Misc.\">\r\n        <app-experience-card\r\n          *ngFor=\"let experience of miscExperiences; let i = index\"\r\n          [experience]=\"experience\"\r\n          [isLast]=\"i === miscExperiences.length - 1\">\r\n        </app-experience-card>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </div>\r\n</section>\r\n","export interface Experience {\r\n  image?: ExperienceImage;\r\n  video?: string,\r\n  gif?: string,\r\n  text: ExperienceText;\r\n}\r\n\r\nexport interface ExperienceImage {\r\n  path: string,\r\n  alt: string,\r\n  class: string\r\n}\r\n\r\nexport interface ExperienceText {\r\n  isWork: boolean;\r\n  heading: string;\r\n  subheading?: string;\r\n  duration: string;\r\n  description: string;\r\n  skills: string[];\r\n}\r\n\r\nexport const softwareDevExperiences: Experience[] = [\r\n  {\r\n    image: {\r\n      path: 'assets/logos/jpmchase.png',\r\n      alt: 'JPMorgan Chase & Co. Logo',\r\n      class: 'jpmchase'\r\n    },\r\n    text: {\r\n      isWork: true,\r\n      heading: 'JPMorgan Chase & Co.',\r\n      subheading: 'Software Engineer Program Intern',\r\n      duration: 'June 2021 - August 2021',\r\n      description: '<li>Deployed data visualization features to a web app to reduce the number of manual data inquiries\\n' +\r\n        'directed towards operations team by internal (~1100/month) and external clients (~480/month)</li>' +\r\n        '<li>Developed a pipeline of ETL jobs on a cron scheduler to migrate several thousand daily data points\\n' + \r\n        'across Splunk and SQL databases into an Elasticsearch instance</li>' +\r\n        '<li>Developed and documented an extensible package in collaboration with a full time developer to\\n' +\r\n        'standardize and update team’s fragmented use of Elasticsearch</li>',\r\n      skills: ['TypeScript', 'Java', 'Angular', 'Spring Boot', 'Elasticsearch', 'OracleSQL', 'JUnit', 'Splunk', 'Confluence', 'Jira']\r\n    }\r\n  },\r\n  {\r\n    text: {\r\n      isWork: false,\r\n      heading: 'Nutshell',\r\n      subheading: 'Command Line Interface',\r\n      duration: 'March 2021 - April 2021',\r\n      description: '<li>Implemented a CLI capable of executing built-in (e.g. aliasing, setting environment variables) and external commands,\\n' +\r\n        'piping commands together, and performing file I/O</li>' +\r\n        '<li>Integrates Catch tests to ensure app robustness. Applies OOP to manage complexity of different commands </li>',\r\n      skills: ['C++', 'Flex', 'Bison', 'Catch2', 'Make']\r\n    }\r\n  },\r\n  {\r\n    image: {\r\n      path: 'assets/logos/studio-reach.png',\r\n      alt: 'Studio Reach Logo',\r\n      class: 'studio-reach'\r\n    },\r\n    text: {\r\n      isWork: true,\r\n      heading: 'Studio Reach',\r\n      subheading: 'Software Developer Part-time',\r\n      duration: 'June 2020 - March 2021',\r\n      description: '<li>Developed features to modernize the UI/UX of a web MVP to appeal to users with the aim of increasing low traffic</li>' +\r\n        '<li>Implemented unit and automated e2e tests and debugged issues with CI/CD pipeline to ensure app robustness</li>' +\r\n        '<li>Utilized NgRx for managing state management for complex user logic. Implemented a tree-based questionnaire for guiding\\n' +\r\n        'new users that relied on NgRx and LocalStorage to track user decisions and history</li>',\r\n      skills: ['TypeScript', 'Angular', 'Firebase', 'Firestore', 'GitLab CI/CD', 'Cypress', 'Jasmine', 'Jira']\r\n    }\r\n  },\r\n  {\r\n    image: {\r\n      path: 'assets/logos/surflab_logo.gif',\r\n      alt: 'UF Logo',\r\n      class: 'surflab'\r\n    },\r\n    text: {\r\n      isWork: true,\r\n      heading: 'UF SurfLab',\r\n      subheading: 'Research Assistant (VascularVR)',\r\n      duration: 'October 2019 - Present',\r\n      description: '<li>Spearhead development of a VR platform over Unity for surgeons to efficiently convert MRI/CT scans to 3D simulations\\n' +\r\n        'of body parts for surgery education</li>' +\r\n        '<li>Prototyped and implemented performant erasing tool for surgeons to capture relevant parts of scans</li>' +\r\n        '<li>Prototyped and developed 3D curve vessels and automatic smart fitting of the vessels to the voxel scans to facilitate\\n' +\r\n        'partial automation</li>',\r\n      skills: ['C#', 'Python', 'C++', 'Unity', 'CMake', 'sklearn', 'Blender']\r\n    }\r\n  },\r\n  {\r\n    image: {\r\n      path: 'assets/logos/bookmarkd.png',\r\n      alt: 'Bookmark\\'d Logo',\r\n      class: 'bookmarkd'\r\n    },\r\n    text: {\r\n      isWork: true,\r\n      heading: 'BookMark\\'d',\r\n      subheading: 'Software Developer Part-time',\r\n      duration: 'October 2019 - July 2020',\r\n      description: '<li>Implemented a web app MVP for college student ecommerce, including\\n' +\r\n        'real-time chat stored in MongoDB, product search via Elasticsearch, and payment processing through Stripe</li>' +\r\n        '<li>Utilized AWS to run the app on an EC2 instance, added CI/CD pipeline using\\n' +\r\n        'CodePipeline (Code Commit, Code Deploy), and set up site’s domain name & SSL certificate</li>',\r\n      skills: ['React', 'Node', 'Express', 'Elasticsearch', 'MongoDB', 'Passport.js', 'Stripe API', 'Confluence', 'AWS',\r\n        'EC2', 'CodePipeline', 'Route 53', 'AWS Certificate Manager']\r\n  }\r\n    }\r\n];\r\n\r\nexport const graphicsExperiences: Experience[] = [\r\n  {\r\n    image: {\r\n      path: 'assets/logos/surflab_logo.gif',\r\n      alt: 'UF Logo',\r\n      class: 'surflab'\r\n    },\r\n    text: {\r\n      isWork: true,\r\n      heading: 'UF SurfLab',\r\n      subheading: 'Research Assistant (AdaptNet)',\r\n      duration: 'November 2021 - Present',\r\n      description: '<li>Aids in implementing a remeshing algorithm that enables users to convert dense 3D meshes into\\n' +\r\n        'a corresponding spline surface with fewer degrees of freedom for ease of modeling and manipulation</li>' +\r\n        '<li>Develops a Docker development environment such that the script can be used across different OS environments</li>' +\r\n        '<li>Researches adjusting the spline’s control points such that the surface  is fit as closely as possible to the target mesh</li>',\r\n      skills: ['Python', 'Docker', 'PyTorch', 'PyTorch3D', 'Git']\r\n    }\r\n  },\r\n  {\r\n    gif: 'beach-scene.gif',\r\n    text: {\r\n      isWork: false,\r\n      heading: 'Beach Scene',\r\n      duration: 'October 2021 - November 2021',\r\n      description: '<li>Models and renders different objects apart of an animated beach scene</li>' +\r\n      '<li>Implements PN triangles and PN quads in order to evaluate and render a textured raft and sail, respectively, by utilizing the tessellation control and evaluation shaders</li>',\r\n      skills: ['C++', 'OpenGL/GLSL', 'CMake', 'Visual Studio', 'Blender']\r\n    }\r\n  },\r\n  {\r\n    gif: 'trefoil.gif',\r\n    text: {\r\n      isWork: false,\r\n      heading: 'Trefoil Curve',\r\n      duration: 'September 2021',\r\n      description: '<li>Models and renders a trefoil curve with interactive control points</li>' +\r\n      '<li>Utilizes tessellation control and evaluation shaders in the OpenGL pipeline to evaluate the control points and render the smooth curve</li>',\r\n      skills: ['C++', 'OpenGL/GLSL', 'CMake', 'Visual Studio']\r\n    }\r\n  },\r\n  {\r\n    video: 'astro-donut-carrot-nyan.mp4',\r\n    text: {\r\n      isWork: false,\r\n      heading: 'Astro Donut Carrot Nyan Adventures',\r\n      duration: 'July 2019',\r\n      description: '<li>Played around with modelling, texturing, and the particle system in Blender to create a fun, short animation</li>',\r\n      skills: ['Blender']\r\n    }\r\n  },\r\n];\r\n\r\nexport const networksExperiences: Experience[] = [\r\n  {\r\n    text: {\r\n      isWork: false,\r\n      heading: 'Peer to Peer File Sharing',\r\n      subheading: 'Mock BitTorrent',\r\n      duration: 'October 2021 - November 2021',\r\n      description: '<li>Implement a protocol to distribute a file across network of computers (peers) similar to BitTorrent using TCP sockets</li>' +\r\n        '<li>Employed multithreading to facilitate a peer’s simultaneous connection with neighbors while maintaining synchronized access over shared\\n' +\r\n        'resources. Develops and designs the messages for peers to synchronize using OOP</li>',\r\n      skills: ['Java', 'Socket Programming', 'Git']\r\n    }\r\n  },\r\n];\r\n\r\nexport const miscExperiences: Experience[] = [\r\n  {\r\n    image: {\r\n      path: 'assets/logos/uf.png',\r\n      alt: 'UF Logo',\r\n      class: 'uf'\r\n    },\r\n    text: {\r\n      isWork: true,\r\n      heading: 'UF Computer & Information Science & Engineering',\r\n      subheading: 'Teaching Assistant',\r\n      duration: 'January 2020 - May 2022',\r\n      description: '<li><strong>Courses</strong>: \"Data Science\" (01/2022 - 05/2022), \"Operating Systems\" (08/2021 - 12/2021), \"Discrete Structures\" (01/2020 - 05/2021),\\n' +\r\n        '\"Computer Graphics\" (01/2021 - 05/2021)</li>' +\r\n        '<li>Simplified and extended scaffold code for \"Computer Graphics\" projects, as coordinated with the professor, to improve student understanding of OpenGL\\n' +\r\n        'and to integrate changes in requirements</li>' +\r\n        '<li>Prepare presentations and example problems for lecture reviews for “Discrete Structures\" discussions\\n' +\r\n        'for 20-30 students</li>' +\r\n        '<li>Developed script to automate tracking attendance for 300-400 students in Zoom discussions for “Discrete Structures”</li>',\r\n      skills: ['C++', 'CMake', 'OpenGL', 'Python', 'Jupyter Notebook', 'sklearn', 'Pandas', 'Canvas API']\r\n    }\r\n  },\r\n]","import { Component, OnInit } from '@angular/core';\r\nimport {AngularFireAnalytics} from '@angular/fire/analytics';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor(analytics: AngularFireAnalytics) {\r\n    analytics.logEvent('home_visited');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<body>\r\n  <section>\r\n    <h3>Hey. How have you been?</h3>\r\n    <h1>I'm Tianrui.</h1>\r\n    <h3>A curious explorer with an appetite for technological innovation and application</h3>\r\n  </section>\r\n  <app-experiences></app-experiences>\r\n  <!-- <app-projects></app-projects> -->\r\n</body>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Project } from '../project';\r\n\r\n@Component({\r\n  selector: 'app-project-card',\r\n  templateUrl: './project-card.component.html',\r\n  styleUrls: ['./project-card.component.scss']\r\n})\r\nexport class ProjectCardComponent implements OnInit {\r\n  @Input() project: Project;\r\n  @Input() selected: boolean;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void { }\r\n}\r\n","<div\r\n  class=\"project-card\"\r\n  [class]=\"project.image.class\"\r\n  [class.selected]=\"selected\"\r\n>\r\n  <img\r\n    [src]=\"project.image.path\"\r\n    [alt]=\"project.image.alt\"\r\n  >\r\n  <h1>{{ project.name }}</h1>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Project, Projects } from '../project';\r\n\r\n@Component({\r\n  selector: 'app-project-display',\r\n  templateUrl: './project-display.component.html',\r\n  styleUrls: ['./project-display.component.scss']\r\n})\r\nexport class ProjectDisplayComponent implements OnInit {\r\n  @Input() project: Project = null;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"project\">\r\n  <ng-container *ngIf=\"project.link; else noLink\">\r\n    <a [href]=\"project.link\" target=\"_blank\">{{ project.name }}</a>\r\n  </ng-container>\r\n  <ng-template #noLink>\r\n    <h1>{{ project.name }}</h1>\r\n  </ng-template>\r\n  <h3>{{ project.duration }}</h3>\r\n  <ul [innerHTML]=\"project.description\"></ul>\r\n  <app-skills-hotbar\r\n    *ngIf=\"project.skills.length > 0\"\r\n    [skills]=\"project.skills\"\r\n    [isLightMode]=\"true\"\r\n  ></app-skills-hotbar>\r\n</div>\r\n","export interface Project {\r\n  image: {\r\n    path: string,\r\n    alt: string,\r\n    class: string\r\n  };\r\n  name: string;\r\n  link: string | null;\r\n  duration: string;\r\n  description: string;\r\n  skills: string[];\r\n}\r\n\r\nexport interface ProjectIndex {\r\n  project: Project;\r\n  index: number;\r\n}\r\n\r\nexport const Projects: Project[] = [\r\n  {\r\n    image: {\r\n      path: 'assets/logos/no-image-available.png',\r\n      alt: 'No Image Available',\r\n      class: 'no-image-available'\r\n    },\r\n    name: 'TA Attendance Grader',\r\n    link: null,\r\n    duration: 'October 2020',\r\n    description: '<li>Develop script that automates attendance for 300-400 students in Zoom discussions for “Applications of Discrete Structures”, increasing efficiency</li>' +\r\n      '<li>Utilize Pandas and Canvas API to extract info from Zoom CSV files and make grade changes</li>',\r\n    skills: ['Python', 'Pandas', 'Canvas API']\r\n  },\r\n  {\r\n    image: {\r\n      path: 'assets/logos/miri-logo.png',\r\n      alt: 'Miri Logo',\r\n      class: 'miri'\r\n    },\r\n    name: 'Miri',\r\n    link: 'https://github.com/meimunchi/timetracker',\r\n    duration: 'August 2020 - Now',\r\n    description: '<li>See what we\\'re up to for <a target=_blank href=\"https://timetracker-ca7f3.web.app/signin\" class=\"miri-link\">Miri</a></li>' +\r\n      '<li>Implementing a web app that aims to optimize the way groups schedule meetings that works for everyone</li>' +\r\n      '<li>Allows individual user to keep track of own calendar (unlike When2meet) and easily use it when setting up group calendars\\n' +\r\n      'for determining free times to schedule meetings for</li>' +\r\n      '<li>Facilitates such design through Angular 9 as the frontend, Firebase for hosting and database management, and Figma for creating page designs and logo</li>' +\r\n      '<li>Sets up a GitLab CI/CD pipeline for efficient deployments on commits to master branch and for running e2e tests on every commit</li>',\r\n    skills: ['TypeScript', 'Angular 9', 'Firebase', 'Cypress', 'GitLab', 'Figma']\r\n  },\r\n  {\r\n    image: {\r\n      path: 'assets/logos/crypto-image.png',\r\n      alt: 'Crypto Image Lock',\r\n      class: 'crypto-image'\r\n    },\r\n    name: 'CryptoImage',\r\n    link: 'https://github.com/littealeaf28/cryptoimage',\r\n    duration: 'March 2020',\r\n    description: '<li>A 2020 SwampHacks project that either encodes a message in an image or decodes a message within an image by\\n' +\r\n      'adjusting the RGB values of select pixels to the message’s ASCII values or vice versa</li>' +\r\n      '<li>Designed as a web app using React for taking in and displaying images and messages and Flask for processing image data\\n' +\r\n      'and performing the encoding and decoding</li>',\r\n    skills: ['JavaScript', 'React', 'Flask']\r\n  }\r\n];\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Project, ProjectIndex, Projects } from './project';\r\n\r\n@Component({\r\n  selector: 'app-projects',\r\n  templateUrl: './projects.component.html',\r\n  styleUrls: ['./projects.component.scss']\r\n})\r\nexport class ProjectsComponent implements OnInit {\r\n  projects: Project[] = Projects;\r\n  selectProjectIndex: ProjectIndex = { project: null, index: -1 };\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  select(project: Project): void {\r\n    const selectIndex = Projects.findIndex((proj: Project) => (proj === project));\r\n    // If project is selected again, reset selectProjectIndex\r\n    this.selectProjectIndex = (selectIndex === this.selectProjectIndex.index) ?\r\n      { project: null, index: -1 } : { project, index: selectIndex };\r\n  }\r\n}\r\n","<section>\r\n  <h1>Project Platter</h1>\r\n  <h3>What's been cooking in my mind</h3>\r\n  <div class=\"project-container\">\r\n    <app-project-card\r\n      *ngFor=\"let project of projects; index as i\"\r\n      [project]=\"project\"\r\n      [selected]=\"i === selectProjectIndex.index\"\r\n      (click)=\"select(project)\"\r\n    ></app-project-card>\r\n    <app-project-display\r\n      [project]=\"selectProjectIndex.project\"\r\n      [class]=\"'follow-item-' + selectProjectIndex.index\"\r\n    ></app-project-display>\r\n  </div>\r\n</section>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-skills-hotbar',\r\n  templateUrl: './skills-hotbar.component.html',\r\n  styleUrls: ['./skills-hotbar.component.scss']\r\n})\r\nexport class SkillsHotbarComponent implements OnInit {\r\n  @Input() skills: string[];\r\n  @Input() isLightMode: boolean;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"skills-container\">\r\n  <ul>\r\n    <li\r\n      *ngFor=\"let skill of skills\"\r\n      [class.light-mode]=\"isLightMode\"\r\n    >{{ skill }}</li>\r\n  </ul>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebaseConfig: {\r\n    apiKey: 'AIzaSyBXd_uyBgk4x4kn7gudocxtURX7Vr9CTSY',\r\n    authDomain: 'littealeaf.firebaseapp.com',\r\n    projectId: 'littealeaf',\r\n    storageBucket: 'littealeaf.appspot.com',\r\n    messagingSenderId: '175995909337',\r\n    appId: '1:175995909337:web:ca8fdbf9200cb914893ac8',\r\n    measurementId: 'G-V6FNRP18FW'\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}